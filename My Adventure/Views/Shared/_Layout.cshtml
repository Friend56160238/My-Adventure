<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    <script>

        var API_KEY = 'AIzaSyDwAZHwfHZf34kRK3_HX3h6s4SIZjf7QfU';  // TODO: Update placeholder with desired API key.
        var CLIENT_ID = '744753063776-phvf2q394bogph56cje79qiagmjue7ii.apps.googleusercontent.com'; 
        var spreadsheetId = '1ML94bH-rlUCIJ0cH7Z3WrGF8ru7Ctyi1lCY-y01Wl4Q';  // TODO: Update placeholder value.
        var range = 'dataMyadventure';
        var Data;
        var dataSave = new Array();


        function makeApiCall() {
          var params = {
            // The ID of the spreadsheet to retrieve data from.
              spreadsheetId: spreadsheetId,  // TODO: Update placeholder value.

            // The A1 notation of the values to retrieve.
              range: range,  // TODO: Update placeholder value.
          };

          var request = gapi.client.sheets.spreadsheets.values.get(params);
          request.then(function(response) {
            // TODO: Change code below to process the `response` object:
              console.log(response.result);
              Data = response.result.values;

              const tbody = document.createElement('tbody');
              const thead = document.createElement('thead');
              var text = '';
              document.getElementById('tableList').innerHTML = '';
              console.log('Data', Data);
              for (var i = 1; i < Data.length; i++) {
                  text = text + '<tr><th scope="row" ><img src="/Content/img/Pin_Map_Vector.svg.png" onclick="moveLocation(' + Data[i][3] + ',' + Data[i][4] + ')" style=" width: 60px;" class="rounded-circle" alt="Cinque Terre"></th><th scope="row"><p style="font-size: 14px;">' + Data[i][1] + '</p><p style="font-size: 12px; margin-top: -15px;">' + Data[i][5] + '</p></th><th scope="row"><button type="button" style="width: 60px;height: 30px;font-size: 11px;" class="btn btn-primary" onclick="view(' + Data[i][0] + ')">Detail</button></th></tr>';
              }
              tbody.innerHTML = text;
              //thead.innerHTML = '<tr><th scope = "col" > My Adventure List</th ></tr >';
              document.getElementById('tableList').appendChild(thead);
              document.getElementById('tableList').appendChild(tbody);

          }, function(reason) {
            console.error('error: ' + reason.result.error.message);
          });
        }

        function initClient() {

          // TODO: Authorize using one of the following scopes:
          //   'https://www.googleapis.com/auth/drive'
          //   'https://www.googleapis.com/auth/drive.file'
          //   'https://www.googleapis.com/auth/drive.readonly'
          //   'https://www.googleapis.com/auth/spreadsheets'
          //   'https://www.googleapis.com/auth/spreadsheets.readonly'
            var SCOPE = 'https://www.googleapis.com/auth/spreadsheets';

          gapi.client.init({
            'apiKey': API_KEY,
            'clientId': CLIENT_ID,
            'scope': SCOPE,
            'discoveryDocs': ['https://sheets.googleapis.com/$discovery/rest?version=v4'],
          }).then(function() {
            gapi.auth2.getAuthInstance().isSignedIn.listen(updateSignInStatus);
            updateSignInStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
          });
        }

        function handleClientLoad() {
          gapi.load('client:auth2', initClient);
        }

        function updateSignInStatus(isSignedIn) {
            makeApiCall(); // เรียกเลย ไม่ต้อง login google
          //if (isSignedIn) {
          //  makeApiCall();
          //}
        }


        function handleSignInClick(event) {
          gapi.auth2.getAuthInstance().signIn();
        }

        function handleSignOutClick(event) {
          gapi.auth2.getAuthInstance().signOut();
        }
    </script>
    <script async defer src="https://apis.google.com/js/api.js"
            onload="this.onload=function(){};handleClientLoad()"
            onreadystatechange="if (this.readyState === 'complete') this.onload()">
    </script>

</head>
<body onload="handleSignInClick()">
    <div class="container">
        <nav class="navbar navbar-dark bg-primary">
            @Html.ActionLink("My Adventure", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
        </nav>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <div style="text-align: center;">
            <button id="signin-button" onclick="handleSignInClick()">Sign in</button>
            <button id="signout-button" onclick="handleSignOutClick()">Sign out</button>
        </div>
        <footer>
            <p>&copy; @DateTime.Now.Year - My Adventure Application</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>
